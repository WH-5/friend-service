syntax = "proto3";

package api.user.v1;

//import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/WH-5/friend-service/api/user/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.v1";


service User{
	rpc GetIdByUnique(GetIdByUniqueRequest)returns(GetIdByUniqueReply);
	rpc GetUniqueByIdMany(GetUniqueByIdManyRequest)returns(GetUniqueByIdManyReply);
	rpc GetProfile (GetProfileRequest) returns  (GetProfileReply);

	rpc GetPublicKey (GetPublicKeyRequest) returns  (GetPublicKeyReply);
}
message GetPublicKeyRequest{
	uint64 user_id=1;
}
message GetPublicKeyReply{
	string public_key=1;
}

message GetProfileRequest{
	string unique_id=1 [(validate.rules).string = {min_len: 1, max_len: 20, pattern: "^[a-zA-Z0-9_-]{1,20}$"}];
}
message GetProfileReply{
	UserProfile profile=1;
	string phone=2;
	string msg=3;
}

message UserProfile {
	string nickname = 1 [
		(validate.rules).string = {
			min_len: 0,
			max_len: 30,
			pattern: "^[一-龥A-Za-z0-9_\\x{1F600}-\\x{1F64F}\\x{1F300}-\\x{1F5FF}]+$|^$"
		}
	];//中文、英语、数字、下划线、emoji
	string bio = 3 [(validate.rules).string = {max_len: 200}];  // 最长 200 个字符
	int32 gender = 4 [(validate.rules).int32 = {in: [0, 1, 2]}]; // 性别只能是 0（未知）、1（男）、2（女）
	string birthday = 5 [(validate.rules).string = {pattern: "^(19|20)\\d{2}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$|^$"}];  // YYYY-MM-DD 格式
	string location = 6 [(validate.rules).string = {pattern: "^[一-龥A-Za-zA-Z]+/[一-龥A-Za-zA-Z]+$|^$"}]; // 位置格式：国家/城市
	string other = 7;
}
message GetUniqueByIdManyRequest{
	uint64 user_id=1;
}
message GetUniqueByIdManyReply{
	string unique_id=1;
	uint64 user_id=2;
}

message GetIdByUniqueRequest{
	string unique_id=1 [(validate.rules).string = {min_len: 1, max_len: 20, pattern: "^[a-zA-Z0-9_-]{1,20}$"}];
}
message GetIdByUniqueReply{
	uint64 user_id=1;
}
